---
- name: Configure node for access to the EESSI stack
  hosts: localhost
  gather_facts: true
  tasks:
    - name: Install prerequisites
      apt:
        name:
          - sudo
          - wget
        state: present

    - name: Download EESSI installation script
      get_url:
        url: https://raw.githubusercontent.com/EESSI/eessi-demo/23da78bd7cc56332cceb9567bf67be637af91946/scripts/install_cvmfs_eessi.sh
        dest: /tmp/install_cvmfs_eessi.sh
        mode: '0755'

    - name: Execute the installation script
      shell: /tmp/install_cvmfs_eessi.sh

    - name: Verify cvmfs_talk command
      shell: "command -v cvmfs_talk"
      register: cvmfs_talk_output
      ignore_errors: true

    - name: Fail if cvmfs_talk command not found
      fail:
        msg: "'cvmfs_talk' command is not available. EESSI client installation failed."
      when: cvmfs_talk_output.rc != 0

    - name: Add private Stratum 1 to list of Stratum 1s
      when: src_stratum1_host is defined
      block:
        - name: Copy domain template
          copy:
            src: ../files/template-eessi-hpc.org.local
            dest: /etc/cvmfs/domain.d/eessi-hpc.org.local
            force: true
            mode: '0664'

        - name: Substitute template variables with values
          replace:
            path: /etc/cvmfs/domain.d/eessi-hpc.org.local
            regexp: "{{ item.variable }}"
            replace: "{{ item.value }}"
          loop:
            - { variable: "_src_stratum1_host_", value: "{{ src_stratum1_host }}" }

        - name: Update EESSI configuration
          shell: cvmfs_config probe pilot.eessi-hpc.org

        - name: Probe Stratum 1 servers by geo location to trigger reordering
          shell: cvmfs_talk -i pilot.eessi-hpc.org host probe geo

- name: Run JupyterLab from EESSI
  hosts: localhost
  become: true
  gather_facts: true
  tasks:
    - name: Copy the run.sh script
      copy:
        src: files/run.sh
        dest: /opt/run.sh
        mode: '0777'

    - name: Install missing Python dependencies inside EESSI
      pip:
        name:
          - traitlets
          - jhub-remote-user-authenticator
          - jupyterhub
        executable: pip3
    - name: Deploy EESSI initialization systemd service
      copy:
        dest: /etc/systemd/system/eessi-init.service
        mode: '0644'
        content: |
          [Unit]
          Description=EESSI Environment Initialization
          Before=jupyterlab.service
          After=network.target

          [Service]
          Type=oneshot
          ExecStart=/bin/bash -l -c '/opt/run.sh'
          RemainAfterExit=yes

          [Install]
          WantedBy=multi-user.target

    - name: Deploy JupyterLab systemd service
      copy:
        dest: /etc/systemd/system/jupyterlab.service
        mode: '0644'
        content: |
          [Unit]
          Description=JupyterLab from EESSI Modules
          After=network.target eessi-init.service
          Requires=eessi-init.service

          [Service]
          Type=simple
          User={{ ansible_user_id }}
          ExecStart=/cvmfs/software.eessi.io/versions/2023.06/software/linux/x86_64/amd/zen2/bin/jupyter-lab --config=/etc/jupyterhub/jupyterhub_config.py
          Restart=on-failure
          RestartSec=42s

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd and enable JupyterLab services
      systemd:
        daemon_reload: yes

    - name: Enable and start EESSI service
      systemd:
        name: eessi-init
        enabled: yes
        state: started

    - name: Enable and start JupyterLab service
      systemd:
        name: jupyterlab
        enabled: yes
        state: started

    - debug:
        msg: 'JupyterLab is running at http://{{ ansible_host }}:8000'

- name: Configure and deploy Nginx as a reverse proxy for JupyterLab
  hosts: localhost
  become: true
  tasks:
    - name: Install Nginx
      apt:
        name: nginx
        state: present
        update_cache: yes

    - name: Deploy Nginx configuration for JupyterLab
      copy:
        dest: /etc/nginx/conf.d/jupyterlab.conf
        mode: '0644'
        content: |
          server {
              listen 80;
              server_name {{ ansible_fqdn|default(inventory_hostname) }};

              location {{ jupyter_nginx_location|default('/') }} {
                  error_page 401 = @custom_401;
                  auth_request /validate;
                  auth_request_set $username $upstream_http_username;
                  proxy_set_header REMOTE_USER $username;
                  proxy_pass http://127.0.0.1:8000;
                  proxy_redirect http://localhost:8000/ $scheme://$host/;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header Host $host;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection $connection_upgrade;
                  client_max_body_size 10G;
              }
          }

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

    - debug:
        msg: 'Nginx has been configured for JupyterLab'
